<?php

namespace App\Filament\Resources\Music\Compositions\Schemas;

use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\Toggle;
use Filament\Schemas\Components\Fieldset;
use Filament\Schemas\Schema;

class CompositionForm
{
    public static function configure(Schema $schema): Schema
    {
        return $schema
            ->components([
                // Composition Info (Read-only)
                Fieldset::make('Composition Information')
                    ->schema([
                        TextInput::make('title')
                            ->disabled()
                            ->helperText('Generated by AI'),

                        TextInput::make('slug')
                            ->disabled()
                            ->helperText('Auto-generated URL slug'),

                        Select::make('user_id')
                            ->relationship('user', 'name')
                            ->disabled()
                            ->helperText('The user who generated this composition'),

                        Textarea::make('description')
                            ->rows(3)
                            ->disabled()
                            ->columnSpanFull()
                            ->helperText('AI-generated description'),
                    ])
                    ->columns(2),

                // Processing Status
                Fieldset::make('Processing Status')
                    ->schema([
                        Select::make('status')
                            ->options([
                                'pending' => 'Pending',
                                'processing' => 'Processing',
                                'completed' => 'Completed',
                                'failed' => 'Failed',
                            ])
                            ->disabled()
                            ->helperText('Current generation status'),

                        TextInput::make('processing_time')
                            ->numeric()
                            ->suffix('ms')
                            ->disabled()
                            ->helperText('Time taken to generate'),

                        TextInput::make('cost_estimate')
                            ->numeric()
                            ->prefix('$')
                            ->disabled()
                            ->helperText('Estimated API cost'),

                        Textarea::make('error_message')
                            ->rows(2)
                            ->columnSpanFull()
                            ->disabled()
                            ->visible(fn ($get) => $get('status') === 'failed')
                            ->helperText('Error details if generation failed'),
                    ])
                    ->columns(3),

                // Audio File
                Fieldset::make('Audio File')
                    ->schema([
                        FileUpload::make('audio_file_path')
                            ->label('Audio File')
                            ->directory('compositions/audio')
                            ->acceptedFileTypes(['audio/*'])
                            ->maxSize(51200) // 50MB
                            ->downloadable()
                            ->disabled()
                            ->helperText('Generated audio file (max 50MB)')
                            ->columnSpanFull(),

                        TextInput::make('file_size')
                            ->numeric()
                            ->suffix('bytes')
                            ->disabled()
                            ->helperText('File size in bytes'),

                        TextInput::make('file_format')
                            ->maxLength(10)
                            ->disabled()
                            ->helperText('Audio file format (e.g., mp3, wav)'),

                        Textarea::make('waveform_data')
                            ->rows(2)
                            ->columnSpanFull()
                            ->disabled()
                            ->helperText('Waveform visualization data (JSON format)'),
                    ])
                    ->columns(2),

                // Publishing & Privacy (Editable)
                Fieldset::make('Publishing & Privacy')
                    ->schema([
                        Select::make('privacy')
                            ->options([
                                'public' => 'Public',
                                'private' => 'Private',
                                'unlisted' => 'Unlisted',
                            ])
                            ->default('public')
                            ->required()
                            ->helperText('Who can see this composition'),

                        Toggle::make('featured')
                            ->label('Featured')
                            ->default(false)
                            ->helperText('Show this composition in featured section'),

                        TextInput::make('play_count')
                            ->numeric()
                            ->default(0)
                            ->disabled()
                            ->helperText('Number of times played'),

                        TextInput::make('download_count')
                            ->numeric()
                            ->default(0)
                            ->disabled()
                            ->helperText('Number of downloads'),

                        TextInput::make('like_count')
                            ->numeric()
                            ->default(0)
                            ->disabled()
                            ->helperText('Number of likes'),
                    ])
                    ->columns(2),
            ]);
    }
}
